<?xml version="1.0"?>
<launch>
    <arg name="veh" doc="Name of vehicle. ex: megaman"/>
    <arg name="param_file_name" default="default" doc="Specify a param file. ex:default."/>
    <arg name="robot_type"
         doc="The type of the robot, e.g., duckiebot, watchtower, traffic_light, ..."/>
    <arg name="robot_configuration"
         doc="The configuration of the robot. For example DB19, DB20, ..."/>
    <arg name="robot_xurdf" value="$(find duckiebot_interface)/urdf/$(arg robot_type).urdf.xacro"
         doc="Location of the URDF XACRO file for the robot type"/>
    <arg name="camera_disabled" default="$(optenv DT_SENSOR_CAMERA_DISABLE 0)"
         doc="If 1 the camera node is not started."/>
         

    <!-- Robot Descriptor: takes a XACRO file, makes a URDF out of it and publishes it -->
    <param name="robot_description"
           command="xacro '$(arg robot_xurdf)' model:=$(arg robot_configuration) veh:=$(arg veh)"/>
    <node ns="$(arg veh)" pkg="robot_state_publisher" type="robot_state_publisher"
          name="robot_state_publisher"/>

    <!-- Camera Node: reads frames from a physical camera and produces ROS messages -->
    <group unless="$(arg camera_disabled)">
        <group if="$(eval arg('robot_type') in ['duckiebot', 'watchtower', 'traffic_light', 'duckiedrone'])">
            <include file="$(find camera_driver)/launch/camera_node.launch">
                <arg name="veh" value="$(arg veh)"/>
                <arg name="param_file_name" value="$(arg robot_type)"/>
            </include>
        </group>
    </group>

    <!-- Traffic Light (Traffic Light robot only): commands the LEDs of a traffic light -->
    <group if="$(eval arg('robot_type') in ['traffic_light'])">
        <remap from="led_emitter_node/custom_pattern" to="~custom_pattern"/>
        <include file="$(find traffic_light)/launch/traffic_light_node.launch">
            <arg name="veh" value="$(arg veh)"/>
        </include>
    </group>


</launch>
